v2.
{<<"/Users/arthur/Code/elixir/pricing/_build/dev/lib/porcelain/ebin/Elixir.Porcelain.App.beam">>,
 'Elixir.Porcelain.App',module,<<"lib/porcelain/application.ex">>,
 ['Elixir.Kernel','Elixir.Application','Elixir.Module'],
 ['Elixir.Supervisor','Elixir.Porcelain.Supervisor','Elixir.Porcelain.Init'],
 [],nil}.
{<<"/Users/arthur/Code/elixir/pricing/_build/dev/lib/porcelain/ebin/Elixir.Porcelain.Result.beam">>,
 'Elixir.Porcelain.Result',module,<<"lib/porcelain.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Result','Elixir.Protocol',
  'Elixir.Porcelain','Elixir.Kernel','Elixir.Kernel.Utils','Elixir.Module'],
 [],[],nil}.
{<<"/Users/arthur/Code/elixir/pricing/_build/dev/lib/porcelain/ebin/Elixir.Porcelain.Driver.Common.beam">>,
 'Elixir.Porcelain.Driver.Common',module,
 <<"lib/porcelain/drivers/driver_common.ex">>,
 ['Elixir.Kernel.Typespec',erlang,'Elixir.Porcelain.Process',
  'Elixir.Porcelain.Result','Elixir.Keyword','Elixir.Behaviour',
  'Elixir.Kernel','Elixir.Module'],
 ['Elixir.File',os,'Elixir.String.Chars','Elixir.Access','Elixir.Enum',
  'Elixir.Porcelain.UsageError','Elixir.List','Elixir.Code','Elixir.Path',
  'Elixir.Application','Elixir.Porcelain.Driver.Common.StreamServer',
  'Elixir.IO',file,'Elixir.Stream'],
 [],nil}.
{<<"/Users/arthur/Code/elixir/pricing/_build/dev/lib/porcelain/ebin/Elixir.Porcelain.Driver.Common.StreamServer.beam">>,
 'Elixir.Porcelain.Driver.Common.StreamServer',module,
 <<"lib/porcelain/drivers/stream_server.ex">>,
 [erlang,'Elixir.GenServer','Elixir.Record','Elixir.Kernel','Elixir.Module'],
 [queue,'Elixir.String.Chars'],
 [],nil}.
{<<"/Users/arthur/Code/elixir/pricing/_build/dev/lib/porcelain/ebin/Elixir.Porcelain.beam">>,
 'Elixir.Porcelain',module,<<"lib/porcelain.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Porcelain.Process',
  'Elixir.Porcelain.Result','Elixir.Keyword','Elixir.Result',
  'Elixir.Protocol','Elixir.Kernel','Elixir.Kernel.Utils','Elixir.Module'],
 [erlang,'Elixir.Atom','Elixir.Access','Elixir.Enum','Elixir.String',
  'Elixir.Porcelain.UsageError','Elixir.Enumerable','Elixir.Application',
  'Elixir.Collectable','Elixir.Porcelain.Init'],
 [],nil}.
{<<"/Users/arthur/Code/elixir/pricing/_build/dev/lib/porcelain/ebin/Elixir.Porcelain.UsageError.beam">>,
 'Elixir.Porcelain.UsageError',module,<<"lib/porcelain/exceptions.ex">>,
 [erlang,'Elixir.Kernel.Typespec','Elixir.Keyword','Elixir.String',
  'Elixir.Exception','Elixir.Protocol','Elixir.Kernel','Elixir.Map',
  'Elixir.Kernel.Utils','Elixir.Module'],
 [],[],nil}.
{<<"/Users/arthur/Code/elixir/pricing/_build/dev/lib/porcelain/ebin/Elixir.Porcelain.Init.beam">>,
 'Elixir.Porcelain.Init',module,<<"lib/porcelain/init.ex">>,
 ['Elixir.Logger','Elixir.Kernel','Elixir.Module'],
 ['Elixir.File',erlang,os,'Elixir.String.Chars',
  'Elixir.Porcelain.Driver.Goon','Elixir.System','Elixir.List',
  'Elixir.Porcelain.Driver.Basic','Elixir.Path','Elixir.Application'],
 [],nil}.
{<<"/Users/arthur/Code/elixir/pricing/_build/dev/lib/porcelain/ebin/Elixir.Porcelain.Process.beam">>,
 'Elixir.Porcelain.Process',module,<<"lib/porcelain/process.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Porcelain.Result','Elixir.Protocol',
  'Elixir.Kernel','Elixir.Kernel.Utils','Elixir.Module'],
 [erlang,'Elixir.Process'],
 [],nil}.
{<<"/Users/arthur/Code/elixir/pricing/_build/dev/lib/porcelain/ebin/Elixir.Porcelain.Driver.Basic.beam">>,
 'Elixir.Porcelain.Driver.Basic',module,
 <<"lib/porcelain/drivers/basic_driver.ex">>,
 ['Elixir.Porcelain.Process','Elixir.Porcelain.Driver.Common','Elixir.Kernel',
  'Elixir.Module'],
 [erlang,os,'Elixir.String.Chars','Elixir.Access','Elixir.Enum','Elixir.Port',
  'Elixir.Porcelain.Driver.Common.StreamServer','Elixir.Stream'],
 [],nil}.
{<<"/Users/arthur/Code/elixir/pricing/_build/dev/lib/porcelain/ebin/Elixir.Porcelain.Driver.Goon.beam">>,
 'Elixir.Porcelain.Driver.Goon',module,
 <<"lib/porcelain/drivers/goon_driver.ex">>,
 [erlang,'Elixir.Porcelain.Process','Elixir.Porcelain.Result',
  'Elixir.Porcelain.Driver.Common','Elixir.Kernel','Elixir.Module'],
 ['Elixir.String.Chars','Elixir.Access',crypto,'Elixir.Port','Elixir.List',
  'Elixir.Porcelain.Driver.Basic',binary,'Elixir.Application',
  'Elixir.Porcelain.Driver.Common.StreamServer','Elixir.Stream'],
 [],nil}.
